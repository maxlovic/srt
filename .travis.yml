language: cpp
dist: xenial

addons:
    apt:
        packages:
        - tclsh
        - pkg-config
        - cmake
        - libssl-dev
        - build-essential
    sonarcloud:
        organization: "maxlovic"
        token:
            secure: "b6wNG5SyPMsa9ErmolD1SGoa8WWz4CVS1j89pktXEl30UBBvY1HbPXaBdN1ky5/ksmVA/HkqM9R82PFW+suxZucuVHpar/LPPwgT8hC97Whk2Q6zB+wmr99scQJRBLvgwmkpuXpEeiuwIhR8VByzYa+MP2sp2p9FN4hlkXucmXhH00FowCRi1UjA7wH8+LU0I3sLBItz8wBQNB4Dp7flyPjfQ9SEmWWELRNl9Oj7uWUnykzVwZ92xtGQUt+TqVJ55uo91YFcwq15EnARYQtEcx2yrkBYPG7NHka1iYQ6d7gFi2k8VE2J/7eFNItI+A5EmJ092c8RLGdQ95FA1HsiVGYzfcgrLdkLCRDni7A9Z8eBVKOtE3iH9Py4rBDC/UhuuouIRsiy03xq8/CB3/lH3WHmzTVTOclvKzETCjuz7mWxCgpxPX46QxmP/K4TPdA9aDbTOo8c1Yx5WT4H8aYqNB/wSp9Dqd7JZ3++0R+nkuGKUhSoAt1o+GK3vjsMKqKOdejKd1Em2KS9q5N2SIYhdpNGGBju7SDYQUe+Camhi1KL+PKboUNh+tv8FnXq6yTuljRbc1hX5YDVQK+HeD64Fb7iCazwpU8htlB1QlpLkg5r+k7e2TMmUpKTe9qyJP+1dbot4K6VFiFU1/JYxpR1iovFtnlueP2aFaeaWeXOUM0="
    homebrew:
        update: false
        packages:
        - openssl

matrix:
    include:
        - os: linux
          env:
          - BUILD_TYPE=Debug
          - BUILD_OPTS='-DENABLE_CODE_COVERAGE=ON -DENABLE_EXPERIMENTAL_BONDING=ON -DCMAKE_CXX_FLAGS="-Werror"'
          - RUN_SONARCUBE=1
          - RUN_CODECOV=1
        - env:
          - BUILD_TYPE=Debug
          - BUILD_OPTS='-DENABLE_LOGGING=OFF -DENABLE_MONOTONIC_CLOCK=ON -DENABLE_EXPERIMENTAL_BONDING=ON -DCMAKE_CXX_FLAGS="-Werror"'
        - os: linux
          env: BUILD_TYPE=Release
        - os: osx
          osx_image: xcode11.1
          env:
          - BUILD_TYPE=Debug
          - BUILD_OPTS='-DCMAKE_CXX_FLAGS="-Werror"'
        - os: osx
          osx_image: xcode11.1
          env:
          - BUILD_TYPE=Release
          - BUILD_OPTS='-DCMAKE_CXX_FLAGS="-Werror"'
        - os: linux
          compiler: x86_64-w64-mingw32-g++
          addons:
            apt:
              packages:
                - gcc-mingw-w64-base
                - binutils-mingw-w64-x86-64
                - gcc-mingw-w64-x86-64
                - gcc-mingw-w64
                - g++-mingw-w64-x86-64
          before_script:
            - git clone -b OpenSSL_1_1_1-stable https://github.com/openssl/openssl.git openssl
            - cd openssl
            - ./Configure --cross-compile-prefix=x86_64-w64-mingw32- mingw64
            - make
            - cd ..
          env: BUILD_TYPE=Release
          
         # Power jobs
        - os: linux
          arch: ppc64le
          env:
          - BUILD_TYPE=Debug
        - arch: ppc64le
          env:
          - BUILD_TYPE=Release
          - BUILD_OPTS='-DENABLE_MONOTONIC_CLOCK=ON'
script:
    - if [ "$TRAVIS_COMPILER" == "x86_64-w64-mingw32-g++" ]; then
        export CC="x86_64-w64-mingw32-gcc";
        export CXX="x86_64-w64-mingw32-g++";
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="OFF" -DUSE_OPENSSL_PC="OFF" -DOPENSSL_ROOT_DIR="$PWD/openssl" -DCMAKE_SYSTEM_NAME="Windows";
      elif [ "$TRAVIS_OS_NAME" == "linux" ]; then
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON";
      elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        export PKG_CONFIG_PATH=$(brew --prefix openssl)"/lib/pkgconfig";
        cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE $BUILD_OPTS -DENABLE_UNITTESTS="ON";
      fi
    - echo "TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG"
    - echo "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
    - echo "RUN_SONARCUBE=$RUN_SONARCUBE"
    - if (( "$RUN_SONARCUBE" )); then
        build-wrapper-linux-x86-64 --out-dir bw-output make;
      else
        make -j$(nproc);
      fi
    - if [ "$TRAVIS_COMPILER" != "x86_64-w64-mingw32-g++" ]; then
        ./test-srt --gtest_filter="-TestMuxer.IPv4_and_IPv6:TestIPv6.v6_calls_v6*";
      fi
    - if (( "$RUN_CODECOV" )); then
        source ./scripts/collect-gcov.sh;
        bash <(curl -s https://codecov.io/bash);
      fi
    - if (( "$RUN_SONARCUBE" )); then
        sonar-scanner -D"sonar.cfamily.gcov.reportPath=.";
      fi
